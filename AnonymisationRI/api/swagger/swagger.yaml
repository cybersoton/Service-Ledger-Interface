swagger: "2.0"
info:
  version: "0.0.1"
  title: Anonymisation Registry Interface
# during dev, should point to your local machine
host: localhost:60001
# basePath prefixes all resource paths 
basePath: /ri
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:

  /anonymisation/register:
    # path for processing register event from User 
    x-swagger-router-controller: anonymisationRI
    post:
      description: This endpoint is used to register a new data-sharing event to Registry
      tags:
        - anonymisation
      # used as the method name of the controller
      operationId: registerToRegistry
      parameters:
        - name: body
          in: body 
          description: JSON body of the register information 
          required: true 
          schema:
            $ref: '#/definitions/RegisterBody' 
      responses:
        "200":
          description: The response body for successful response 
          schema:
            # a pointer to a definition
            $ref: "#/definitions/RegisterResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /anonymisation/queryOldRes:
    # binds a127 app logic to a route
    x-swagger-router-controller: anonymisationRI
    post:
      description: this endpoint is used to query old result from the registry
      # used as the method name of the controller
      tags: 
        - anonymisation
      operationId: queryOldRes
      parameters:
        - name: body
          in: body
          description: JSON body of the query input
          required: true
          schema: 
            $ref: "#/definitions/QueryBody"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/QueryResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /anonymisation/receiveAnonyRes:
    # binds a127 app logic to a route
    x-swagger-router-controller: anonymisationRI
    post:
      description: this endpoint is used to receive anonymised result from the anonymisation interface
      # used as the method name of the controller
      tags: 
        - anonymisation
      operationId: receiveAnonyRes
      parameters:
        - name: body
          in: body
          description: JSON body of the query input
          required: true
          schema: 
            $ref: "#/definitions/AnonyResultBody"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ReceiveResultResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

definitions:

  RegisterBody:
    type: object
    description: HTTP body defining the register operation for the 
                  /ri/anonymisation/register endpoint.
    required:
      - requestorID
      - token
      - data_provider
      - data_consumer
      - time_stamp
      - dataID 
    properties:
      requestorID:
        type: string
        description: Indentifier of the requesting entity 
      token:
        type: string
        description: a crypto token to validate if the entity if allowed to 
                      perform the requested operation
      data_provider: 
        type: string
        description: the name of the data provider who shares a dataset
      data_consumer:
        type: string
        description: the name of the data consumer who receives a dataset
      time_stamp:
        type: string
        description: the timestamp in the following format - '2006-01-02 15:04:05'
      dataID:
        type: string
        description: Indentifier of the shared dataset

  RegisterResponse:
    type: object
    description: HTTP response for a successful register operation
    required: 
      - message
    properties:
      message:
        type: string
        description: a message in JSON format signifying that the data has been registered

  AnonyResultBody:
    type: object
    description: HTTP body definiting the query operation for the 
                  /ri/anonymisation/receiveAnonyRes endpoint
    required:
      - requestorID
      - token
      - data_consumer
      - dataID
      - function_type
      - budget_used
      - anonymised_result
    properties:
      requestorID:
        type: string
        description: Indentifier of the requesting body
      token:
        type: string
        description: a crypto token to validate if the entity is allowed to perform the 
                      requested operation.
      data_consumer: 
        type: string
        description: the name of the data consumer who receives a dataset
      dataID:
        type: string
        description: the unique ID of a dataset
      function_type:
        type: string
        description: the queried function type
      budget_used: 
        type: number
        description: the budget used of differential privacy
      anonymised_result:
        type: number
        description: the anonymised result from anonymisation interface

  ReceiveResultResponse:
    type: object
    description: HTTP response definiting the query operation for the 
                  /ri/anonymisation/receiveAnonyRes endpoint
    required:
      - final_status
      - final_result
    properties:
      final_status: 
        type: number
        description: the statue of the final result (0 -- null result)
      final_result:
        type: number
        description: the anonymised result from anonymisation interface

  QueryBody:
    type: object
    description: HTTP body definiting the query operation for the 
                  /ri/anonymisation/queryOldRes endpoint
    required:
      - requestorID
      - token
      - data_consumer
      - dataID
      - function_type
      - request_budget
    properties:
      requestorID:
        type: string
        description: Indentifier of the requesting body
      token:
        type: string
        description: a crypto token to validate if the entity is allowed to perform the 
                      requested operation.
      data_consumer: 
        type: string
        description: the name of the data consumer who receives a dataset
      dataID:
        type: string
        description: the unique ID of a dataset
      function_type:
        type: string
        description: the queried function type
      request_budget: 
        type: number
        description: the requeseted budget of differential privacy

  QueryResponse:
    type: object
    description: HTTP response for a successful read operation
    required:
      - data_provider
      - data_consumer
      - time_stamp
      - dataID
      - ifExist
      - budget_used
    properties:
      data_provider:
        type: string
        description: the name of the data provider who shares a dataset
      data_consumer:
        type: string
        description: the name of the data consumer who receives a dataset
      time_stamp:
        type: string
        description: the timestamp in the following format - '2006-01-02 15:04:05'
      dataID:
        type: string
        description: Indentifier of the shared dataset
      ifExist:
        type: number
        description: 0 -- old result does not exist; otherwise -- 1
      budget_used:
        type: number
        description: budget consumed
      

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
